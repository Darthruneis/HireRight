@model CategoryFilterViewModel

<style>
    .pagingButton {
        min-width: 50px;
        top: 0px;
    }
</style>
<div class="col-xs-6">
    @Html.LabelFor(x => x.Filter.TitleFilter)
    <br />
    @Html.EditorFor(x => x.Filter.TitleFilter, new { htmlAttributes = new { @class = "form-control" } })
</div>
<div class="col-xs-6">
    @Html.LabelFor(x => x.Filter.DescriptionFilter)
    <br />
    @Html.EditorFor(x => x.Filter.DescriptionFilter, new { htmlAttributes = new { @class = "form-control" } })
</div>
<div class="col-xs-11" style="padding-top: 5px;">
    @{
        Html.RenderPartial("_PagingButtonsForFilter", 
                           new PagingButtonsModel(Model.Filter, Model.TotalMatchingResults));
    }
</div>
<div class="col-xs-1" style="padding-top: 5px;">
    <button id="FilterButton" type="button" class="btn btn-default pull-right">Filter</button>
</div>

<script src="~/Scripts/CustomSolutions/categoryFilterPartial.js"></script>
<script>
    //This script cannot be extracted into a .js file because of the reference to the Model
    $(document).ready(function () {
        console.log("binding paging");
        $("button.pagingButton").click(function () {
            filterCategories($(this).data("page"), 10);
        });
        $("#FilterButton").click(function () {
            filterCategories(1, 10);
        });
    });
</script>