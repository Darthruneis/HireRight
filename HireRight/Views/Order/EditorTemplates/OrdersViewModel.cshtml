@model OrdersViewModel
<div class="row">
    <div class="col-xs-12 col-lg-4">
        @Html.ValidatedEditorWithLabelFor(x => Model.PositionsToFill, true)
    </div>
    <div class="col-xs-12 col-lg-3">
        @Html.LabelFor(x => x.Products) <br />
        @Html.DropDownListFor(x => x.SelectedProductId,
                                      Model.Products.Select(x => new SelectListItem { Text = x.Title, Value = x.Id.ToString() }).ToList(),
                                      new { id = "listOfProducts", @class = "form-control", style = "font-size: 12pt;" }) <br />
        @Html.ValidationMessageFor(x => x.SelectedProductId)
    </div>
    <div class="col-xs-12 col-sm-6 col-lg-3" id="productDiscounts">
    </div>
    <div class="col-xs-12 col-sm-6 col-lg-2">
        <div class="container-fluid">
            <div class="col-xs-12">
                @Html.ValidatedEditorWithLabelFor(x => Model.Quantity, true)
                <div id="orderTotal" style="width: 100%;">
                    Total: $0.00
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <h2>Notes (optional)</h2>
        @Html.TextAreaFor(x => Model.Notes, new { style = "resize: none;", rows = "5", cols = "150", @class = "form-control" })
    </div>
</div>
<script src="~/Scripts/orderDetailsUpdates.js"></script>
<script>
    $().ready(function () {
        updateDiscounts();
        $("#listOfProducts").change(updateDiscounts);
        $("#Order_Quantity").change(updateTotal);
    });
</script>