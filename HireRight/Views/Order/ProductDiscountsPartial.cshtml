@model ProductDTO
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-6">
            Volume
        </div>
        <div class="col-xs-6">
            Price/unit
        </div>
    </div>
    <div class="row">
        <div class="col-xs-6">
            @{ int firstVolumeForDiscount = Model.Discounts.Min(x => x.Threshold) - 1; }
            1 - @firstVolumeForDiscount
        </div>
        <div class="col-xs-6">
            $@Model.Price.ToString("N2")
        </div>
    </div>
    @{
        DiscountDTO[] discountsArray = Model.Discounts.ToArray();
        for (int i = 0; i < Model.Discounts.Count; i++)
        {
            string nextVolume = "+";
            if (i + 1 < Model.Discounts.Count)
            {
                nextVolume = " - " + (discountsArray[i + 1].Threshold - 1).ToString("N0");
            }
            <div class="row">
                <div class="col-xs-6">
                    @discountsArray[i].Threshold.ToString("N0")@nextVolume
                </div>
                @if (discountsArray[i].IsPercent)
                {
                    <div class="col-xs-6">
                        @{ decimal price = Model.Price * (1.00m - discountsArray[i].Amount);}
                        $@price.ToString("N2")
                    </div>
                }
                else
                {
                    <div class="col-xs-6">
                        @{ decimal price = Model.Price - discountsArray[i].Amount;}
                        $@price.ToString("N2")
                    </div>
                }
            </div>
        }
    }
</div>